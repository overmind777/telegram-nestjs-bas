services:
  db:
    image: postgres
    container_name: db-telegram-nest-bas
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - webnet

  bot:
    build:
      context: .  # Використовуємо кореневу директорію
      dockerfile: bot/Dockerfile
    container_name: bot-telegram-nest-bas
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TOKEN: ${TOKEN}
      WEBHOOK_URL: ${DOMAIN}
      PORT: ${PORT}
    expose:
      - "3000"
    networks:
      - webnet
    depends_on:
      - db

#  certbot:
#    image: certbot/certbot:latest
#    container_name: certbot
#    volumes:
#      - ./certbot/www:/var/www/certbot
#      - ./certbot/conf:/etc/letsencrypt
#    networks:
#      - webnet

#  nginx-bot:
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile
#    container_name: nginx-telegram-nest-bas
#    restart: always
#    ports:
#      - "88:80"
#      - "8443:443"
#    volumes:
#      - ./certbot/www:/var/www/certbot
#      - ./certbot/conf:/etc/nginx/ssl
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    networks:
#      - webnet
#    depends_on:
#      - db
#      - bot
#      - certbot

volumes:
  db-data:

networks:
  webnet:
    driver: bridge
    external: true
